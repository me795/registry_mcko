<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.mcko.registry.repository.read.UserRepositoryRead">

    <resultMap id="userMap" type="ru.mcko.registry.entity.User">
        <id column="user_id" property="id" />
        <result column="user_email" property="email"/>
        <result column="user_name" property="name"/>
        <result column="user_password" property="password"/>
        <result column="is_blocked" property="isBlocked"/>
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
        <result column="deleted_at" property="deletedAt" />
        <collection property="roles" resultMap="roleMap"/>
    </resultMap>

    <resultMap id="roleMap" type="ru.mcko.registry.entity.Role">
        <id column="role_id" property="id" />
        <result column="role_name" property="name"/>
    </resultMap>

    <select id="findByName" resultMap="userMap">
        SELECT
            users.id AS user_id,
            users.email AS user_email,
            users.name AS user_name,
            users.hashpass AS user_password,
            users.created_at AS created_at,
            users.updated_at AS updated_at,
            users.deleted_at AS deleted_at,
            roles.id AS role_id,
            roles.name AS role_name
        FROM
            users
            LEFT JOIN user_role ON user_role.user_id = users.id
            LEFT JOIN roles ON user_role.role_id = roles.id
        WHERE 1=1
            AND users.email = TRIM(#{email});
    </select>

    <select id="findActiveByName" resultMap="userMap">
        SELECT
            users.id AS user_id,
            users.email AS user_email,
            users.name AS user_name,
            users.hashpass AS user_password,
            users.created_at AS created_at,
            users.updated_at AS updated_at,
            users.deleted_at AS deleted_at,
            roles.id AS role_id,
            roles.name AS role_name
        FROM
            users
                LEFT JOIN user_role ON user_role.user_id = users.id
                LEFT JOIN roles ON user_role.role_id = roles.id
        WHERE 1=1
          AND users.email = TRIM(#{email})
          AND is_blocked = false;
    </select>

    <select id="findById" resultMap="userMap">
        SELECT
            users.id AS user_id,
            users.email AS user_email,
            users.name AS user_name,
            users.hashpass AS user_password,
            users.created_at AS created_at,
            users.updated_at AS updated_at,
            users.deleted_at AS deleted_at,
            users.is_blocked AS is_blocked,
            roles.id AS role_id,
            roles.name AS role_name
        FROM
            users
                LEFT JOIN user_role ON user_role.user_id = users.id
                LEFT JOIN roles ON user_role.role_id = roles.id
        WHERE
            users.id = #{id};
    </select>

    <select id="listAll" resultMap="userMap">
        SELECT
            users.id AS user_id,
            users.email AS user_email,
            users.name AS user_name,
            users.hashpass AS user_password,
            users.created_at AS created_at,
            users.updated_at AS updated_at,
            users.deleted_at AS deleted_at,
            users.is_blocked AS is_blocked,
            roles.id AS role_id,
            roles.name AS role_name
        FROM
            users
            LEFT JOIN user_role ON user_role.user_id = users.id
            LEFT JOIN roles ON user_role.role_id = roles.id
    </select>


</mapper>